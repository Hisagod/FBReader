apply plugin: 'com.android.application'

dependencies {
	compile project(':fbreader:api')
	compile project(':fbreader:util')
	compile project(':fbreader:common')
	compile project(':fbreader:resources')
	compile project(':fbreader:text_formats')
	compile project(':fbreader:zip-amse')
	compile project(':third-party:drag-sort-listview')
	compile project(':third-party:android-filechooser')
	compile project(':third-party:SuperToasts')
	compile project(':third-party:AmbilWarna')
	compile files('libs/nanohttpd-2.0.5.jar')
	compile files('libs/httpmime-4.2.5.jar')
	compile files('libs/pdfparse.jar')
}

android {
	compileSdkVersion 26
	buildToolsVersion '26.0.2'

	lintOptions {
		abortOnError false
	}

	useLibrary 'org.apache.http.legacy'

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 26
		versionCode 1
		versionName "1.0.0"
		ndk {
			abiFilters "armeabi-v7a"
		}
	}

	externalNativeBuild {
		ndkBuild {
			path 'src/main/jni/Android.mk'
		}
	}

	sourceSets {
		main.aidl.srcDirs = ['src/main/java']
		main.java.srcDirs = ['src/main/java']
		main.res.srcDirs = ['src/main/res']
		main.assets.srcDirs = ['src/main/assets']
		main.jniLibs.srcDirs = ['src/main/libs']
		main.jni.srcDirs = []
	}

//	signingConfigs {
//		release {
//			storeFile file(RELEASE_STORE_FILE)
//			storePassword RELEASE_STORE_PASSWORD
//			keyAlias RELEASE_KEY_ALIAS
//			keyPassword RELEASE_KEY_PASSWORD
//		}
//	}

	buildTypes {
		release {
			minifyEnabled false
//			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
//			signingConfig signingConfigs.release

			buildConfigField "String", "FBNETWORK_KEY", "${FBREADER_ORG_FBNETWORK_KEY}"
			buildConfigField "String", "FBNETWORK_SECRET", "${FBREADER_ORG_FBNETWORK_SECRET}"
		}
	}

//	applicationVariants.all { variant ->
//		def generateHelpTask = project.tasks.create "generateHelp${variant.name.capitalize()}", Exec
//		generateHelpTask.commandLine('src/main/help/generate.py', 'src/main/help/proto', 'src/main/help/html', variant.outputs[0].processResources.assetsDir.path + '/data/intro')
//		variant.mergeResources.dependsOn(generateHelpTask)
//	}
}

//android.applicationVariants.all { variant ->
//	def abiVersion = variant.productFlavors.get(0).versionCode
//
//	def baseCode = 0
//	def version = new File("$projectDir/VERSION").text.trim()
//	if (version.matches('\\d*\\.\\d* beta \\d*')) {
//		def parts = version.split('[ .]')
//		baseCode = parts[0].toInteger() * 1000000 + parts[1].toInteger() * 10000 - 5000 + parts[3].toInteger() * 100
//	} else if (version.matches('\\d*\\.\\d* rc \\d*')) {
//		def parts = version.split('[ .]')
//		baseCode = parts[0].toInteger() * 1000000 + parts[1].toInteger() * 10000 - 2500 + parts[3].toInteger() * 100
//	} else if (version.matches('\\d*\\.\\d*')) {
//		def parts = version.split('\\.')
//		baseCode = parts[0].toInteger() * 1000000 + parts[1].toInteger() * 10000
//	} else if (version.matches('\\d*\\.\\d*\\.\\d*')) {
//		def parts = version.split('\\.')
//		baseCode = parts[0].toInteger() * 1000000 + parts[1].toInteger() * 10000 + parts[2].toInteger() * 100
//	} else {
//		throw new IllegalArgumentException('Unsupported version format: ' + version)
//	}
//
//	variant.mergedFlavor.versionCode = baseCode + 10 + abiVersion
//}
